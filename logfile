2017-04-01 11:09:34,434 p=1911 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 11:09:34,545 p=1911 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/step0/ping.yml': line 13, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        src: files/script
  	dest: /etc/zabbix/script
  ^ here

2017-04-01 11:16:39,146 p=1963 u=root |  PLAY [Step2] *******************************************************************
2017-04-01 11:16:39,935 p=1963 u=root |  TASK [copy scripts to /etc/zabbix folder] **************************************
2017-04-01 11:16:40,666 p=1963 u=root |  fatal: [localhost]: UNREACHABLE! => {"changed": false, "msg": "SSH encountered an unknown error during the connection. We recommend you re-run the command using -vvvv, which will enable SSH debugging output to help diagnose the issue", "unreachable": true}
2017-04-01 11:16:40,670 p=1963 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 11:16:40,671 p=1963 u=root |  PLAY RECAP *********************************************************************
2017-04-01 11:16:40,672 p=1963 u=root |  localhost                  : ok=0    changed=0    unreachable=1    failed=0   
2017-04-01 11:17:44,894 p=2084 u=root |  PLAY [Step2] *******************************************************************
2017-04-01 11:17:45,025 p=2084 u=root |  TASK [copy scripts to /etc/zabbix folder] **************************************
2017-04-01 11:17:54,312 p=2084 u=root |  changed: [localhost]
2017-04-01 11:17:54,324 p=2084 u=root |  PLAY RECAP *********************************************************************
2017-04-01 11:17:54,326 p=2084 u=root |  localhost                  : ok=1    changed=1    unreachable=0    failed=0   
2017-04-01 11:18:23,147 p=2268 u=root |  PLAY [Step2] *******************************************************************
2017-04-01 11:18:23,276 p=2268 u=root |  TASK [copy scripts to /etc/zabbix folder] **************************************
2017-04-01 11:18:32,278 p=2268 u=root |  changed: [localhost]
2017-04-01 11:18:32,288 p=2268 u=root |  PLAY RECAP *********************************************************************
2017-04-01 11:18:32,290 p=2268 u=root |  localhost                  : ok=1    changed=1    unreachable=0    failed=0   
2017-04-01 11:19:05,404 p=2447 u=root |  PLAY [Step2] *******************************************************************
2017-04-01 11:19:05,521 p=2447 u=root |  TASK [copy scripts to /etc/zabbix folder] **************************************
2017-04-01 11:19:07,895 p=2447 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "checksum": "1d77fd4a9b2231061dd687bdce5e59df2d9f2b8c", "failed": true, "module_stderr": "", "module_stdout": "sudo: a password is required\r\n", "msg": "MODULE FAILURE", "parsed": false}
2017-04-01 11:19:07,898 p=2447 u=root |  NO MORE HOSTS LEFT *************************************************************
2017-04-01 11:19:07,902 p=2447 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 11:19:07,903 p=2447 u=root |  PLAY RECAP *********************************************************************
2017-04-01 11:19:07,903 p=2447 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-04-01 11:23:07,204 p=2626 u=root |  PLAY [Step2] *******************************************************************
2017-04-01 11:23:07,334 p=2626 u=root |  TASK [copy scripts to /etc/zabbix folder] **************************************
2017-04-01 11:23:44,154 p=2626 u=root |  changed: [localhost]
2017-04-01 11:23:44,163 p=2626 u=root |  PLAY RECAP *********************************************************************
2017-04-01 11:23:44,164 p=2626 u=root |  localhost                  : ok=1    changed=1    unreachable=0    failed=0   
2017-04-01 11:25:14,161 p=3600 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 11:25:14,456 p=3600 u=root |  1 plays in example1.yml
2017-04-01 11:25:14,502 p=3600 u=root |  PLAY [Step2] *******************************************************************
2017-04-01 11:25:14,637 p=3600 u=root |  TASK [copy scripts to /etc/zabbix folder] **************************************
2017-04-01 11:25:14,637 p=3600 u=root |  task path: /root/step0/example1.yml:12
2017-04-01 11:25:51,377 p=3600 u=root |  changed: [localhost] => {"changed": true, "dest": "/etc/zabbix/", "invocation": {"module_args": {"backup": true, "dest": "/etc/zabbix/", "group": "root", "mode": 493, "owner": "root", "src": "files/script"}, "module_name": "copy"}, "src": "/root/step0/files/script"}
2017-04-01 11:25:51,386 p=3600 u=root |  PLAY RECAP *********************************************************************
2017-04-01 11:25:51,387 p=3600 u=root |  localhost                  : ok=1    changed=1    unreachable=0    failed=0   
2017-04-01 17:37:11,971 p=1869 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/step0/example1.yml': line 10, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - roles:
  ^ here

2017-04-01 17:39:03,722 p=1893 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 17:39:04,385 p=1893 u=root |  TASK [zabbix : include] ********************************************************
2017-04-01 17:39:04,537 p=1893 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/root/step0/roles/zabbix/tasks/step0.yml': line 30, column 1, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n    regexp: '^{{ item.user }} ALL'\n\tinsertafter=\"^root\"\n^ here\n"}
2017-04-01 17:39:04,541 p=1893 u=root |  NO MORE HOSTS LEFT *************************************************************
2017-04-01 17:39:04,545 p=1893 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 17:39:04,546 p=1893 u=root |  PLAY RECAP *********************************************************************
2017-04-01 17:39:04,547 p=1893 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-04-01 17:39:42,142 p=1904 u=root |  playbook: example1.yml
2017-04-01 17:39:42,143 p=1904 u=root |    play #1 (all): zabbix installation  playbook	TAGS: []
2017-04-01 17:39:42,191 p=1904 u=root |      tasks:
      include	TAGS: []
      include	TAGS: []

2017-04-01 17:41:09,520 p=1912 u=root |  playbook: example1.yml
2017-04-01 17:41:09,521 p=1912 u=root |    play #1 (all): zabbix installation  playbook	TAGS: []
2017-04-01 17:41:09,558 p=1912 u=root |      tasks:
      zabbix : Initial steps	TAGS: []
      include	TAGS: []

2017-04-01 17:42:02,866 p=1920 u=root |  playbook: example1.yml
2017-04-01 17:42:02,868 p=1920 u=root |    play #1 (all): zabbix installation  playbook	TAGS: []
2017-04-01 17:42:02,900 p=1920 u=root |      tasks:
      zabbix : Initial steps	TAGS: []
      zabbix : copy zabbix executables	TAGS: []

2017-04-01 17:42:24,532 p=1925 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 17:42:24,883 p=1925 u=root |  1 plays in example1.yml
2017-04-01 17:42:24,931 p=1925 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 17:42:25,085 p=1925 u=root |  TASK [zabbix : Initial steps] **************************************************
2017-04-01 17:42:25,087 p=1925 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:2
2017-04-01 17:42:25,220 p=1925 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/root/step0/roles/zabbix/tasks/step0.yml': line 30, column 1, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n    regexp: '^{{ item.user }} ALL'\n\tinsertafter=\"^root\"\n^ here\n"}
2017-04-01 17:42:25,226 p=1925 u=root |  NO MORE HOSTS LEFT *************************************************************
2017-04-01 17:42:25,229 p=1925 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 17:42:25,230 p=1925 u=root |  PLAY RECAP *********************************************************************
2017-04-01 17:42:25,231 p=1925 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-04-01 17:43:23,798 p=1937 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 17:43:24,120 p=1937 u=root |  1 plays in example1.yml
2017-04-01 17:43:24,168 p=1937 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 17:43:24,322 p=1937 u=root |  TASK [zabbix : Initial steps] **************************************************
2017-04-01 17:43:24,322 p=1937 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:2
2017-04-01 17:43:24,446 p=1937 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/root/step0/roles/zabbix/tasks/step0.yml': line 31, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n    insertafter=\"^root\"\n    line: '{{ item.user }} ALL=(ALL) NOPASSWD: /usr/bin/tailf, /bin/cat, /bin/grep,/bin/awk, /bin/sed, /usr/local/sbin/zabbix_sender, /usr/bin/tr,  /usr/sbin/dmidecode, /usr/bin/lsattr, /bin/ls'\n    ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-04-01 17:43:24,450 p=1937 u=root |  NO MORE HOSTS LEFT *************************************************************
2017-04-01 17:43:24,453 p=1937 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 17:43:24,454 p=1937 u=root |  PLAY RECAP *********************************************************************
2017-04-01 17:43:24,455 p=1937 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-04-01 17:45:45,834 p=1949 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 17:45:46,135 p=1949 u=root |  1 plays in example1.yml
2017-04-01 17:45:46,180 p=1949 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 17:45:46,313 p=1949 u=root |  TASK [zabbix : Initial steps] **************************************************
2017-04-01 17:45:46,314 p=1949 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:2
2017-04-01 17:45:46,418 p=1949 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/root/step0/roles/zabbix/tasks/step0.yml': line 31, column 4, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n    insertafter=\"^root\"\n   #line: '{{ item.user }} ALL=(ALL) NOPASSWD: /usr/bin/tailf, /bin/cat, /bin/grep,/bin/awk, /bin/sed, /usr/local/sbin/zabbix_sender, /usr/bin/tr,  /usr/sbin/dmidecode, /usr/bin/lsattr, /bin/ls'\n   ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-04-01 17:45:46,421 p=1949 u=root |  NO MORE HOSTS LEFT *************************************************************
2017-04-01 17:45:46,425 p=1949 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 17:45:46,426 p=1949 u=root |  PLAY RECAP *********************************************************************
2017-04-01 17:45:46,427 p=1949 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-04-01 17:50:03,242 p=1968 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 17:50:03,582 p=1968 u=root |  1 plays in example1.yml
2017-04-01 17:50:03,626 p=1968 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 17:50:03,762 p=1968 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 17:50:03,763 p=1968 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:2
2017-04-01 17:51:51,917 p=1968 u=root |  changed: [localhost] => {"changed": true, "invocation": {"module_args": {"conf_file": null, "disable_gpg_check": false, "disablerepo": null, "enablerepo": null, "exclude": null, "install_repoquery": true, "list": null, "name": ["sysstat"], "state": "present", "update_cache": false}, "module_name": "yum"}, "msg": "", "rc": 0, "results": ["Loaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: centos.excellmedia.net\n * extras: mirror.ehost.vn\n * updates: centos-hn.viettelidc.com.vn\nResolving Dependencies\n--> Running transaction check\n---> Package sysstat.x86_64 0:10.1.5-11.el7 will be installed\n--> Processing Dependency: libsensors.so.4()(64bit) for package: sysstat-10.1.5-11.el7.x86_64\n--> Running transaction check\n---> Package lm_sensors-libs.x86_64 0:3.4.0-4.20160601gitf9185e5.el7 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package            Arch      Version                             Repository\n                                                                           Size\n================================================================================\nInstalling:\n sysstat            x86_64    10.1.5-11.el7                       base    310 k\nInstalling for dependencies:\n lm_sensors-libs    x86_64    3.4.0-4.20160601gitf9185e5.el7      base     41 k\n\nTransaction Summary\n================================================================================\nInstall  1 Package (+1 Dependent package)\n\nTotal download size: 351 k\nInstalled size: 1.2 M\nDownloading packages:\n--------------------------------------------------------------------------------\nTotal                                               13 kB/s | 351 kB  00:27     \nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : lm_sensors-libs-3.4.0-4.20160601gitf9185e5.el7.x86_64        1/2 \n  Installing : sysstat-10.1.5-11.el7.x86_64                                 2/2 \n  Verifying  : sysstat-10.1.5-11.el7.x86_64                                 1/2 \n  Verifying  : lm_sensors-libs-3.4.0-4.20160601gitf9185e5.el7.x86_64        2/2 \n\nInstalled:\n  sysstat.x86_64 0:10.1.5-11.el7                                                \n\nDependency Installed:\n  lm_sensors-libs.x86_64 0:3.4.0-4.20160601gitf9185e5.el7                       \n\nComplete!\n"]}
2017-04-01 17:51:51,933 p=1968 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 17:51:51,935 p=1968 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:8
2017-04-01 17:51:54,466 p=1968 u=root |  changed: [localhost] => {"changed": true, "enabled": true, "invocation": {"module_args": {"arguments": "", "enabled": true, "name": "sysstat", "pattern": null, "runlevel": "default", "sleep": null, "state": "started"}, "module_name": "service"}, "name": "sysstat", "state": "started"}
2017-04-01 17:51:54,479 p=1968 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 17:51:54,480 p=1968 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:14
2017-04-01 17:51:57,422 p=1968 u=root |  changed: [localhost] => (item={u'comment': u'oper service account', u'state': u'present', u'sudo': True, u'user': u'oper', u'pass': u'z@bb1xhijkill'}) => {"changed": true, "comment": "oper service account", "createhome": true, "group": 1002, "home": "/home/oper", "invocation": {"module_args": {"append": false, "comment": "oper service account", "createhome": true, "expires": null, "force": false, "generate_ssh_key": null, "group": null, "groups": null, "home": null, "login_class": null, "move_home": false, "name": "oper", "non_unique": false, "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER", "remove": false, "shell": null, "skeleton": null, "ssh_key_bits": "2048", "ssh_key_comment": "ansible-generated on centos.box", "ssh_key_file": null, "ssh_key_passphrase": null, "ssh_key_type": "rsa", "state": "present", "system": false, "uid": null, "update_password": "always"}, "module_name": "user"}, "item": {"comment": "oper service account", "pass": "z@bb1xhijkill", "state": "present", "sudo": true, "user": "oper"}, "name": "oper", "password": "NOT_LOGGING_PASSWORD", "shell": "/bin/bash", "state": "present", "system": false, "uid": 1002}
2017-04-01 17:51:57,436 p=1968 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 17:51:57,437 p=1968 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:26
2017-04-01 17:51:59,958 p=1968 u=root |  changed: [localhost] => (item={u'comment': u'oper service account', u'state': u'present', u'sudo': True, u'user': u'oper', u'pass': u'z@bb1xhijkill'}) => {"backup": "", "changed": true, "invocation": {"module_args": {"backrefs": false, "backup": false, "content": null, "create": false, "delimiter": null, "dest": "/etc/sudoers", "directory_mode": null, "follow": false, "force": null, "group": null, "insertafter": null, "insertbefore": null, "line": "oper ALL=(ALL) NOPASSWD: ALL", "mode": null, "owner": null, "regexp": "^oper ALL", "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "present", "validate": "visudo -cf %s"}, "module_name": "lineinfile"}, "item": {"comment": "oper service account", "pass": "z@bb1xhijkill", "state": "present", "sudo": true, "user": "oper"}, "msg": "line added"}
2017-04-01 17:51:59,989 p=1968 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 17:51:59,991 p=1968 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:38
2017-04-01 17:52:29,927 p=1968 u=root |  ok: [localhost] => {"changed": false, "dest": "/etc/zabbix/", "invocation": {"module_args": {"backup": true, "dest": "/etc/zabbix/", "group": "root", "mode": 493, "owner": "root", "src": "files/script"}, "module_name": "copy"}, "src": "/root/step0/files/script"}
2017-04-01 17:52:29,933 p=1968 u=root |  PLAY RECAP *********************************************************************
2017-04-01 17:52:29,933 p=1968 u=root |  localhost                  : ok=5    changed=4    unreachable=0    failed=0   
2017-04-01 17:53:45,697 p=3020 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 17:53:46,072 p=3020 u=root |  1 plays in example1.yml
2017-04-01 17:53:46,125 p=3020 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 17:53:46,279 p=3020 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 17:53:46,280 p=3020 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:2
2017-04-01 17:53:49,822 p=3020 u=root |  ok: [localhost] => {"changed": false, "invocation": {"module_args": {"conf_file": null, "disable_gpg_check": false, "disablerepo": null, "enablerepo": null, "exclude": null, "install_repoquery": true, "list": null, "name": ["sysstat"], "state": "present", "update_cache": false}, "module_name": "yum"}, "msg": "", "rc": 0, "results": ["sysstat-10.1.5-11.el7.x86_64 providing sysstat is already installed"]}
2017-04-01 17:53:49,838 p=3020 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 17:53:49,839 p=3020 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:8
2017-04-01 17:53:51,895 p=3020 u=root |  ok: [localhost] => {"changed": false, "enabled": true, "invocation": {"module_args": {"arguments": "", "enabled": true, "name": "sysstat", "pattern": null, "runlevel": "default", "sleep": null, "state": "started"}, "module_name": "service"}, "name": "sysstat", "state": "started"}
2017-04-01 17:53:51,914 p=3020 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 17:53:51,915 p=3020 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:14
2017-04-01 17:53:54,393 p=3020 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'}) => {"changed": true, "comment": "zabbix service account", "createhome": true, "group": 1003, "home": "/home/zabbix", "invocation": {"module_args": {"append": false, "comment": "zabbix service account", "createhome": true, "expires": null, "force": false, "generate_ssh_key": null, "group": null, "groups": null, "home": null, "login_class": null, "move_home": false, "name": "zabbix", "non_unique": false, "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER", "remove": false, "shell": null, "skeleton": null, "ssh_key_bits": "2048", "ssh_key_comment": "ansible-generated on centos.box", "ssh_key_file": null, "ssh_key_passphrase": null, "ssh_key_type": "rsa", "state": "present", "system": false, "uid": null, "update_password": "always"}, "module_name": "user"}, "item": {"comment": "zabbix service account", "pass": "z@bb1xhijkill", "state": "present", "sudo": true, "user": "zabbix"}, "name": "zabbix", "password": "NOT_LOGGING_PASSWORD", "shell": "/bin/bash", "state": "present", "system": false, "uid": 1003}
2017-04-01 17:53:54,406 p=3020 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 17:53:54,407 p=3020 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:26
2017-04-01 17:53:56,317 p=3020 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'}) => {"backup": "", "changed": true, "invocation": {"module_args": {"backrefs": false, "backup": false, "content": null, "create": false, "delimiter": null, "dest": "/etc/sudoers", "directory_mode": null, "follow": false, "force": null, "group": null, "insertafter": null, "insertbefore": null, "line": "zabbix ALL=(ALL) NOPASSWD: ALL", "mode": null, "owner": null, "regexp": "^zabbix ALL", "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "present", "validate": "visudo -cf %s"}, "module_name": "lineinfile"}, "item": {"comment": "zabbix service account", "pass": "z@bb1xhijkill", "state": "present", "sudo": true, "user": "zabbix"}, "msg": "line added"}
2017-04-01 17:53:56,331 p=3020 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 17:53:56,332 p=3020 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:38
2017-04-01 17:54:29,940 p=3020 u=root |  ok: [localhost] => {"changed": false, "dest": "/etc/zabbix/", "invocation": {"module_args": {"backup": true, "dest": "/etc/zabbix/", "group": "root", "mode": 493, "owner": "root", "src": "files/script"}, "module_name": "copy"}, "src": "/root/step0/files/script"}
2017-04-01 17:54:29,955 p=3020 u=root |  PLAY RECAP *********************************************************************
2017-04-01 17:54:29,956 p=3020 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-04-01 17:58:41,092 p=4054 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 17:58:41,677 p=4054 u=root |  1 plays in example1.yml
2017-04-01 17:58:41,754 p=4054 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 17:58:41,967 p=4054 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 17:58:41,968 p=4054 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:2
2017-04-01 17:58:44,895 p=4054 u=root |  ok: [localhost] => {"changed": false, "invocation": {"module_args": {"conf_file": null, "disable_gpg_check": false, "disablerepo": null, "enablerepo": null, "exclude": null, "install_repoquery": true, "list": null, "name": ["sysstat"], "state": "present", "update_cache": false}, "module_name": "yum"}, "msg": "", "rc": 0, "results": ["sysstat-10.1.5-11.el7.x86_64 providing sysstat is already installed"]}
2017-04-01 17:58:44,908 p=4054 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 17:58:44,910 p=4054 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:8
2017-04-01 17:58:47,106 p=4054 u=root |  ok: [localhost] => {"changed": false, "enabled": true, "invocation": {"module_args": {"arguments": "", "enabled": true, "name": "sysstat", "pattern": null, "runlevel": "default", "sleep": null, "state": "started"}, "module_name": "service"}, "name": "sysstat", "state": "started"}
2017-04-01 17:58:47,135 p=4054 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 17:58:47,138 p=4054 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:14
2017-04-01 17:58:49,279 p=4054 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'}) => {"append": false, "changed": true, "comment": "zabbix service account", "group": 1003, "home": "/home/zabbix", "invocation": {"module_args": {"append": false, "comment": "zabbix service account", "createhome": true, "expires": null, "force": false, "generate_ssh_key": null, "group": null, "groups": null, "home": null, "login_class": null, "move_home": false, "name": "zabbix", "non_unique": false, "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER", "remove": false, "shell": null, "skeleton": null, "ssh_key_bits": "2048", "ssh_key_comment": "ansible-generated on centos.box", "ssh_key_file": null, "ssh_key_passphrase": null, "ssh_key_type": "rsa", "state": "present", "system": false, "uid": null, "update_password": "always"}, "module_name": "user"}, "item": {"comment": "zabbix service account", "pass": "z@bb1xhijkill", "state": "present", "sudo": true, "user": "zabbix"}, "move_home": false, "name": "zabbix", "password": "NOT_LOGGING_PASSWORD", "shell": "/bin/bash", "state": "present", "uid": 1003}
2017-04-01 17:58:49,297 p=4054 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 17:58:49,298 p=4054 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:26
2017-04-01 17:58:51,202 p=4054 u=root |  ok: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'}) => {"backup": "", "changed": false, "invocation": {"module_args": {"backrefs": false, "backup": false, "content": null, "create": false, "delimiter": null, "dest": "/etc/sudoers", "directory_mode": null, "follow": false, "force": null, "group": null, "insertafter": null, "insertbefore": null, "line": "zabbix ALL=(ALL) NOPASSWD: ALL", "mode": null, "owner": null, "regexp": "^zabbix ALL", "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "present", "validate": "visudo -cf %s"}, "module_name": "lineinfile"}, "item": {"comment": "zabbix service account", "pass": "z@bb1xhijkill", "state": "present", "sudo": true, "user": "zabbix"}, "msg": ""}
2017-04-01 17:58:51,215 p=4054 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 17:58:51,216 p=4054 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:38
2017-04-01 17:59:25,192 p=4054 u=root |  changed: [localhost] => {"changed": true, "dest": "/etc/zabbix/", "invocation": {"module_args": {"backup": true, "dest": "/etc/zabbix/", "group": "root", "mode": 493, "owner": "root", "src": "files/script"}, "module_name": "copy"}, "src": "/root/step0/files/script"}
2017-04-01 17:59:25,202 p=4054 u=root |  PLAY RECAP *********************************************************************
2017-04-01 17:59:25,202 p=4054 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-04-01 18:03:24,858 p=5161 u=root |  Using /root/step0/ansible.cfg as config file
2017-04-01 18:03:25,194 p=5161 u=root |  1 plays in example1.yml
2017-04-01 18:03:25,232 p=5161 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 18:03:25,398 p=5161 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 18:03:25,399 p=5161 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:2
2017-04-01 18:03:28,410 p=5161 u=root |  ok: [localhost] => {"changed": false, "invocation": {"module_args": {"conf_file": null, "disable_gpg_check": false, "disablerepo": null, "enablerepo": null, "exclude": null, "install_repoquery": true, "list": null, "name": ["sysstat"], "state": "present", "update_cache": false}, "module_name": "yum"}, "msg": "", "rc": 0, "results": ["sysstat-10.1.5-11.el7.x86_64 providing sysstat is already installed"]}
2017-04-01 18:03:28,422 p=5161 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 18:03:28,424 p=5161 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:8
2017-04-01 18:03:30,254 p=5161 u=root |  ok: [localhost] => {"changed": false, "enabled": true, "invocation": {"module_args": {"arguments": "", "enabled": true, "name": "sysstat", "pattern": null, "runlevel": "default", "sleep": null, "state": "started"}, "module_name": "service"}, "name": "sysstat", "state": "started"}
2017-04-01 18:03:30,267 p=5161 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 18:03:30,268 p=5161 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:14
2017-04-01 18:03:32,440 p=5161 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'}) => {"changed": true, "comment": "zabbix service account", "createhome": true, "group": 1003, "home": "/home/zabbix", "invocation": {"module_args": {"append": false, "comment": "zabbix service account", "createhome": true, "expires": null, "force": false, "generate_ssh_key": null, "group": null, "groups": null, "home": null, "login_class": null, "move_home": false, "name": "zabbix", "non_unique": false, "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER", "remove": false, "shell": null, "skeleton": null, "ssh_key_bits": "2048", "ssh_key_comment": "ansible-generated on centos.box", "ssh_key_file": null, "ssh_key_passphrase": null, "ssh_key_type": "rsa", "state": "present", "system": false, "uid": null, "update_password": "always"}, "module_name": "user"}, "item": {"comment": "zabbix service account", "pass": "z@bb1xhijkill", "state": "present", "sudo": true, "user": "zabbix"}, "name": "zabbix", "password": "NOT_LOGGING_PASSWORD", "shell": "/bin/bash", "state": "present", "stderr": "useradd: warning: the home directory already exists.\nNot copying any file from skel directory into it.\nCreating mailbox file: File exists\n", "system": false, "uid": 1003}
2017-04-01 18:03:32,459 p=5161 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 18:03:32,460 p=5161 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:26
2017-04-01 18:03:34,343 p=5161 u=root |  ok: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'}) => {"backup": "", "changed": false, "invocation": {"module_args": {"backrefs": false, "backup": false, "content": null, "create": false, "delimiter": null, "dest": "/etc/sudoers", "directory_mode": null, "follow": false, "force": null, "group": null, "insertafter": null, "insertbefore": null, "line": "zabbix ALL=(ALL) NOPASSWD: ALL", "mode": null, "owner": null, "regexp": "^zabbix ALL", "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "present", "validate": "visudo -cf %s"}, "module_name": "lineinfile"}, "item": {"comment": "zabbix service account", "pass": "z@bb1xhijkill", "state": "present", "sudo": true, "user": "zabbix"}, "msg": ""}
2017-04-01 18:03:34,364 p=5161 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 18:03:34,366 p=5161 u=root |  task path: /root/step0/roles/zabbix/tasks/main.yml:38
2017-04-01 18:04:08,898 p=5161 u=root |  changed: [localhost] => {"changed": true, "dest": "/etc/zabbix/", "invocation": {"module_args": {"backup": true, "dest": "/etc/zabbix/", "group": "root", "mode": 493, "owner": "root", "src": "files/script"}, "module_name": "copy"}, "src": "/root/step0/files/script"}
2017-04-01 18:04:08,910 p=5161 u=root |  PLAY RECAP *********************************************************************
2017-04-01 18:04:08,911 p=5161 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-04-01 18:06:47,751 p=6309 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 18:06:47,898 p=6309 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 18:06:50,780 p=6309 u=root |  ok: [localhost]
2017-04-01 18:06:50,794 p=6309 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 18:06:52,570 p=6309 u=root |  ok: [localhost]
2017-04-01 18:06:52,582 p=6309 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 18:06:54,659 p=6309 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:06:54,672 p=6309 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 18:06:56,555 p=6309 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:06:56,571 p=6309 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 18:07:29,299 p=6309 u=root |  ok: [localhost]
2017-04-01 18:07:29,308 p=6309 u=root |  PLAY RECAP *********************************************************************
2017-04-01 18:07:29,310 p=6309 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-04-01 18:09:32,207 p=7291 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/step0/roles/zabbix/tasks/main.yml': line 31, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    insertafter="^root"
    line: '{{ item.user }}  ALL= NOPASSWD : /usr/bin/tailf, /bin/cat, /bin/grep,/bin/awk, /bin/sed, /usr/local/sbin/zabbix_sender, /usr/bin/tr,  /usr/sbin/dmidecode, /usr/bin/lsattr, /bin/ls'
    ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-04-01 18:10:01,833 p=7296 u=root |   [WARNING]: module inline not found in /usr/lib/python2.7/site-packages/ansible/modules:/usr/lib/python2.7/site-
packages/ansible/modules/core:/usr/lib/python2.7/site-packages/ansible/modules/extras:/usr/lib/python2.7/site-
packages/ansible/modules/core/cloud:/usr/lib/python2.7/site-packages/ansible/modules/core/commands:/usr/lib/python2.7/site-
packages/ansible/modules/core/database:/usr/lib/python2.7/site-packages/ansible/modules/core/files:/usr/lib/python2.7/site-
packages/ansible/modules/core/inventory:/usr/lib/python2.7/site-packages/ansible/modules/core/network:/usr/lib/python2.7/site-
packages/ansible/modules/core/packaging:/usr/lib/python2.7/site-packages/ansible/modules/core/source_control:/usr/lib/python2.7/site-
packages/ansible/modules/core/system:/usr/lib/python2.7/site-packages/ansible/modules/core/utilities:/usr/lib/python2.7/site-
packages/ansible/modules/core/web_infrastructure:/usr/lib/python2.7/site-packages/ansible/modules/core/cloud/amazon:/usr/lib/python2.7
/site-packages/ansible/modules/core/cloud/azure:/usr/lib/python2.7/site-
packages/ansible/modules/core/cloud/digital_ocean:/usr/lib/python2.7/site-
packages/ansible/modules/core/cloud/docker:/usr/lib/python2.7/site-packages/ansible/modules/core/cloud/google:/usr/lib/python2.7/site-
packages/ansible/modules/core/cloud/linode:/usr/lib/python2.7/site-packages/ansible/modules/core/cloud/openstack:/usr/lib/python2.7
/site-packages/ansible/modules/core/cloud/rackspace:/usr/lib/python2.7/site-
packages/ansible/modules/core/cloud/vmware:/usr/lib/python2.7/site-packages/ansible/modules/core/database/mysql:/usr/lib/python2.7
/site-packages/ansible/modules/core/database/postgresql:/usr/lib/python2.7/site-
packages/ansible/modules/core/network/basics:/usr/lib/python2.7/site-
packages/ansible/modules/core/packaging/language:/usr/lib/python2.7/site-packages/ansible/modules/core/packaging/os:/usr/lib/python2.7
/site-packages/ansible/modules/core/utilities/helper:/usr/lib/python2.7/site-
packages/ansible/modules/core/utilities/logic:/usr/lib/python2.7/site-packages/ansible/modules/extras/cloud:/usr/lib/python2.7/site-
packages/ansible/modules/extras/clustering:/usr/lib/python2.7/site-packages/ansible/modules/extras/commands:/usr/lib/python2.7/site-
packages/ansible/modules/extras/database:/usr/lib/python2.7/site-packages/ansible/modules/extras/files:/usr/lib/python2.7/site-
packages/ansible/modules/extras/messaging:/usr/lib/python2.7/site-packages/ansible/modules/extras/monitoring:/usr/lib/python2.7/site-
packages/ansible/modules/extras/network:/usr/lib/python2.7/site-packages/ansible/modules/extras/notification:/usr/lib/python2.7/site-
packages/ansible/modules/extras/packaging:/usr/lib/python2.7/site-packages/ansible/modules/extras/source_control:/usr/lib/python2.7
/site-packages/ansible/modules/extras/system:/usr/lib/python2.7/site-
packages/ansible/modules/extras/web_infrastructure:/usr/lib/python2.7/site-
packages/ansible/modules/extras/cloud/amazon:/usr/lib/python2.7/site-
packages/ansible/modules/extras/cloud/centurylink:/usr/lib/python2.7/site-
packages/ansible/modules/extras/cloud/cloudstack:/usr/lib/python2.7/site-
packages/ansible/modules/extras/cloud/docker:/usr/lib/python2.7/site-packages/ansible/modules/extras/cloud/google:/usr/lib/python2.7
/site-packages/ansible/modules/extras/cloud/lxc:/usr/lib/python2.7/site-packages/ansible/modules/extras/cloud/misc:/usr/lib/python2.7
/site-packages/ansible/modules/extras/cloud/openstack:/usr/lib/python2.7/site-
packages/ansible/modules/extras/cloud/profitbricks:/usr/lib/python2.7/site-
packages/ansible/modules/extras/cloud/rackspace:/usr/lib/python2.7/site-
packages/ansible/modules/extras/cloud/vmware:/usr/lib/python2.7/site-
packages/ansible/modules/extras/cloud/webfaction:/usr/lib/python2.7/site-
packages/ansible/modules/extras/database/misc:/usr/lib/python2.7/site-
packages/ansible/modules/extras/database/mysql:/usr/lib/python2.7/site-
packages/ansible/modules/extras/database/postgresql:/usr/lib/python2.7/site-
packages/ansible/modules/extras/database/vertica:/usr/lib/python2.7/site-
packages/ansible/modules/extras/network/a10:/usr/lib/python2.7/site-packages/ansible/modules/extras/network/citrix:/usr/lib/python2.7
/site-packages/ansible/modules/extras/network/f5:/usr/lib/python2.7/site-
packages/ansible/modules/extras/packaging/language:/usr/lib/python2.7/site-
packages/ansible/modules/extras/packaging/os:/usr/lib/python2.7/site-packages/ansible/modules/core/windows:/usr/lib/python2.7/site-
packages/ansible/modules/extras/windows

2017-04-01 18:10:23,226 p=7306 u=root |   [WARNING]: While constructing a mapping from /usr/lib/python2.7/site-packages/ansible/modules/extras/windows/win_nssm.py, line 11,
column 3, found a duplicate dict key (password).  Using last defined value only.

2017-04-01 18:10:23,550 p=7306 u=root |  a10_server                      Manage A10 Networks AX/SoftAX/Thunder/vThunder devices                                            
a10_service_group               Manage A10 Networks devices' service groups                                                       
a10_virtual_server              Manage A10 Networks devices' virtual servers                                                      
acl                             Sets and retrieves file ACL information.                                                          
add_host                        add a host (and alternatively a group) to the ansible-playbook in-memory inventory                
airbrake_deployment             Notify airbrake about app deployments                                                             
alternatives                    Manages alternative programs for common commands                                                  
apache2_module                  enables/disables a module of the Apache2 webserver                                                
apk                             Manages apk packages                                                                              
apt                             Manages apt-packages                                                                              
apt_key                         Add or remove an apt key                                                                          
apt_repository                  Add and remove APT repositories                                                                   
apt_rpm                         apt_rpm package manager                                                                           
assemble                        Assembles a configuration file from fragments                                                     
assert                          Fail with custom message                                                                          
at                              Schedule the execution of a command or script file via the at command.                            
authorized_key                  Adds or removes an SSH authorized key                                                             
azure                           create or terminate a virtual machine in azure                                                    
bigip_facts                     Collect facts from F5 BIG-IP devices                                                              
bigip_gtm_wide_ip               Manages F5 BIG-IP GTM wide ip                                                                     
bigip_monitor_http              Manages F5 BIG-IP LTM http monitors                                                               
bigip_monitor_tcp               Manages F5 BIG-IP LTM tcp monitors                                                                
bigip_node                      Manages F5 BIG-IP LTM nodes                                                                       
bigip_pool                      Manages F5 BIG-IP LTM pools                                                                       
bigip_pool_member               Manages F5 BIG-IP LTM pool members                                                                
bigpanda                        Notify BigPanda about deployments                                                                 
blockinfile                     Insert/update/remove a text block surrounded by marker lines.                                     
boundary_meter                  Manage boundary meters                                                                            
bower                           Manage bower packages with bower                                                                  
bundler                         Manage Ruby Gem dependencies with Bundler                                                         
bzr                             Deploy software (or files) from bzr branches                                                      
campfire                        Send a message to Campfire                                                                        
capabilities                    Manage Linux capabilities                                                                         
circonus_annotation             create an annotation in circonus                                                                  
clc_aa_policy                   Create or Delete Anti Affinity Policies at CenturyLink Cloud.                                     
clc_alert_policy                Create or Delete Alert Policies at CenturyLink Cloud.                                             
clc_blueprint_package           deploys a blue print package on a set of servers in CenturyLink Cloud.                            
clc_firewall_policy             Create/delete/update firewall policies                                                            
clc_group                       Create/delete Server Groups at Centurylink Cloud                                                  
clc_loadbalancer                Create, Delete shared loadbalancers in CenturyLink Cloud.                                         
clc_modify_server               modify servers in CenturyLink Cloud.                                                              
clc_publicip                    Add and Delete public ips on servers in CenturyLink Cloud.                                        
clc_server                      Create, Delete, Start and Stop servers in CenturyLink Cloud.                                      
clc_server_snapshot             Create, Delete and Restore server snapshots in CenturyLink Cloud.                                 
cloudformation                  Create or delete an AWS CloudFormation stack                                                      
cloudtrail                      manage CloudTrail creation and deletion                                                           
command                         Executes a command on a remote node                                                               
composer                        Dependency Manager for PHP                                                                        
consul                          Add, modify & delete services within a consul cluster.                                            
consul_acl                      manipulate consul acl keys and rules                                                              
consul_kv                       Manipulate entries in the key/value store of a consul cluster.                                    
consul_session                  manipulate consul sessions                                                                        
copy                            Copies files to remote locations.                                                                 
cpanm                           Manages Perl library dependencies.                                                                
cron                            Manage cron.d and crontab entries.                                                                
cronvar                         Manage variables in crontabs                                                                      
crypttab                        Encrypted Linux block devices                                                                     
cs_account                      Manages accounts on Apache CloudStack based clouds.                                               
cs_affinitygroup                Manages affinity groups on Apache CloudStack based clouds.                                        
cs_domain                       Manages domains on Apache CloudStack based clouds.                                                
cs_facts                        Gather facts on instances of Apache CloudStack based clouds.                                      
cs_firewall                     Manages firewall rules on Apache CloudStack based clouds.                                         
cs_instance                     Manages instances and virtual machines on Apache CloudStack based clouds.                         
cs_instancegroup                Manages instance groups on Apache CloudStack based clouds.                                        
cs_ip_address                   Manages public IP address associations on Apache CloudStack based clouds.                         
cs_iso                          Manages ISO images on Apache CloudStack based clouds.                                             
cs_loadbalancer_rule            Manages load balancer rules on Apache CloudStack based clouds.                                    
cs_loadbalancer_rule_member     Manages load balancer rule members on Apache CloudStack based clouds.                             
cs_network                      Manages networks on Apache CloudStack based clouds.                                               
cs_portforward                  Manages port forwarding rules on Apache CloudStack based clouds.                                  
cs_project                      Manages projects on Apache CloudStack based clouds.                                               
cs_securitygroup                Manages security groups on Apache CloudStack based clouds.                                        
cs_securitygroup_rule           Manages security group rules on Apache CloudStack based clouds.                                   
cs_sshkeypair                   Manages SSH keys on Apache CloudStack based clouds.                                               
cs_staticnat                    Manages static NATs on Apache CloudStack based clouds.                                            
cs_template                     Manages templates on Apache CloudStack based clouds.                                              
cs_user                         Manages users on Apache CloudStack based clouds.                                                  
cs_vmsnapshot                   Manages VM snapshots on Apache CloudStack based clouds.                                           
datadog_event                   Posts events to DataDog  service                                                                  
datadog_monitor                 Manages Datadog monitors                                                                          
debconf                         Configure a .deb package                                                                          
debug                           Print statements during execution                                                                 
deploy_helper                   Manages some of the steps common in deploying projects.                                           
digital_ocean                   Create/delete a droplet/SSH_key in DigitalOcean                                                   
digital_ocean_domain            Create/delete a DNS record in DigitalOcean                                                        
digital_ocean_sshkey            Create/delete an SSH key in DigitalOcean                                                          
django_manage                   Manages a Django application.                                                                     
dnf                             Manages packages with the `dnf' package manager                                                   
dnsimple                        Interface with dnsimple.com (a DNS hosting service).                                              
dnsmadeeasy                     Interface with dnsmadeeasy.com (a DNS hosting service).                                           
docker                          manage docker containers                                                                          
docker_image                    manage docker images                                                                              
docker_login                    Manage Docker registry logins                                                                     
dpkg_selections                 Dpkg package selection selections                                                                 
dynamodb_table                  Create, update or delete AWS Dynamo DB tables.                                                    
easy_install                    Installs Python libraries                                                                         
ec2                             create, terminate, start or stop an instance in ec2                                               
ec2_ami                         create or destroy an image in ec2                                                                 
ec2_ami_copy                    copies AMI between AWS regions, return new image id                                               
ec2_ami_find                    Searches for AMIs to obtain the AMI ID and other information                                      
ec2_asg                         Create or delete AWS Autoscaling Groups                                                           
ec2_eip                         associate an EC2 elastic IP with an instance.                                                     
ec2_elb                         De-registers or registers instances from EC2 ELBs                                                 
ec2_elb_facts                   Gather facts about EC2 Elastic Load Balancers in AWS                                              
ec2_elb_lb                      Creates or destroys Amazon ELB.                                                                   
ec2_eni                         Create and optionally attach an Elastic Network Interface (ENI) to an instance                    
ec2_eni_facts                   Gather facts about ec2 ENI interfaces in AWS                                                      
ec2_facts                       Gathers facts about remote hosts within ec2 (aws)                                                 
ec2_group                       maintain an ec2 VPC security group.                                                               
ec2_key                         maintain an ec2 key pair.                                                                         
ec2_lc                          Create or delete AWS Autoscaling Launch Configurations                                            
ec2_metric_alarm                Create/update or delete AWS Cloudwatch 'metric alarms'                                            
ec2_remote_facts                Gather facts about ec2 instances in AWS                                                           
ec2_scaling_policy              Create or delete AWS scaling policies for Autoscaling groups                                      
ec2_snapshot                    creates a snapshot from an existing volume                                                        
ec2_tag                         create and remove tag(s) to ec2 resources.                                                        
ec2_vol                         create and attach a volume, return volume id and device map                                       
ec2_vpc                         configure AWS virtual private clouds                                                              
ec2_vpc_igw                     Manage an AWS VPC Internet gateway                                                                
ec2_vpc_net                     Configure AWS virtual private clouds                                                              
ec2_vpc_net_facts               Gather facts about ec2 VPCs in AWS                                                                
ec2_vpc_route_table             Manage route tables for AWS virtual private clouds                                                
ec2_vpc_route_table_facts       Gather facts about ec2 VPC route tables in AWS                                                    
ec2_vpc_subnet                  Manage subnets in AWS virtual private clouds                                                      
ec2_vpc_subnet_facts            Gather facts about ec2 VPC subnets in AWS                                                         
ec2_win_password                gets the default administrator password for ec2 windows instances                                 
ecs_cluster                     create or terminate ecs clusters                                                                  
ecs_task                        run, start or stop a task in ecs                                                                  
ecs_taskdefinition              register a task definition in ecs                                                                 
ejabberd_user                   Manages users for ejabberd servers                                                                
elasticache                     Manage cache clusters in Amazon Elasticache.                                                      
elasticache_subnet_group        manage Elasticache subnet groups                                                                  
elasticsearch_plugin            Manage Elasticsearch plugins                                                                      
expect                          Executes a command and responds to prompts                                                        
facter                          Runs the discovery program `facter' on the remote system                                          
fail                            Fail with custom message                                                                          
fetch                           Fetches a file from remote nodes                                                                  
file                            Sets attributes of files                                                                          
filesystem                      Makes file system on block device                                                                 
find                            return a list of files based on specific criteria                                                 
firewalld                       Manage arbitrary ports/services with firewalld                                                    
flowdock                        Send a message to a flowdock                                                                      
gc_storage                      This module manages objects/buckets in Google Cloud Storage.                                      
gce                             create or terminate GCE instances                                                                 
gce_img                         utilize GCE image resources                                                                       
gce_lb                          create/destroy GCE load-balancer resources                                                        
gce_net                         create/destroy GCE networks and firewall rules                                                    
gce_pd                          utilize GCE persistent disk resources                                                             
gce_tag                         add or remove tag(s) to/from GCE instance                                                         
gem                             Manage Ruby gems                                                                                  
get_url                         Downloads files from HTTP, HTTPS, or FTP to node                                                  
getent                          a wrapper to the unix getent utility                                                              
git                             Deploy software (or files) from git checkouts                                                     
github_hooks                    Manages github service hooks.                                                                     
gluster_volume                  Manage GlusterFS volumes                                                                          
group                           Add or remove groups                                                                              
group_by                        Create Ansible groups based on facts                                                              
grove                           Sends a notification to a grove.io channel                                                        
hall                            Send notification to Hall                                                                         
haproxy                         Enable, disable, and set weights for HAProxy backend servers using socket commands.               
hg                              Manages Mercurial (hg) repositories.                                                              
hipchat                         Send a message to hipchat.                                                                        
homebrew                        Package manager for Homebrew                                                                      
homebrew_cask                   Install/uninstall homebrew casks.                                                                 
homebrew_tap                    Tap a Homebrew repository.                                                                        
hostname                        Manage hostname                                                                                   
htpasswd                        manage user files for basic authentication                                                        
iam                             Manage IAM users, groups, roles and keys                                                          
iam_cert                        Manage server certificates for use on ELBs and CloudFront                                         
iam_policy                      Manage IAM policies for users, groups, and roles                                                  
include_vars                    Load variables from files, dynamically within a task.                                             
ini_file                        Tweak settings in INI files                                                                       
ipify_facts                     Retrieve the public IP of your internet gateway.                                                  
iptables                        Modify the systems iptables                                                                       
irc                             Send a message to an IRC channel                                                                  
jabber                          Send a message to jabber user or chat room                                                        
jboss                           deploy applications to JBoss                                                                      
jira                            create and modify issues in a JIRA instance                                                       
kernel_blacklist                Blacklist kernel modules                                                                          
known_hosts                     Add or remove a host from the `known_hosts' file                                                  
layman                          Manage Gentoo overlays                                                                            
librato_annotation              create an annotation in librato                                                                   
lineinfile                      Ensure a particular line is in a file, or replace an existing line using a back-referenced regular...
linode                          create / delete / stop / restart an instance in Linode Public Cloud                               
lldp                            get details reported by lldp                                                                      
locale_gen                      Creates or removes locales.                                                                       
logentries                      Module for tracking logs via logentries.com                                                       
lvg                             Configure LVM volume groups                                                                       
lvol                            Configure LVM logical volumes                                                                     
lxc_container                   Manage LXC Containers                                                                             
macports                        Package manager for MacPorts                                                                      
mail                            Send an email                                                                                     
maven_artifact                  Downloads an Artifact from a Maven Repository                                                     
modprobe                        Add or remove kernel modules                                                                      
mongodb_user                    Adds or removes a user from a MongoDB database.                                                   
monit                           Manage the state of a program monitored via Monit                                                 
mount                           Control active and configured mount points                                                        
mqtt                            Publish a message on an MQTT topic for the IoT                                                    
mysql_db                        Add or remove MySQL databases from a remote host.                                                 
mysql_replication               Manage MySQL replication                                                                          
mysql_user                      Adds or removes a user from a MySQL database.                                                     
mysql_variables                 Manage MySQL global variables                                                                     
nagios                          Perform common tasks in Nagios related to downtime and notifications.                             
netscaler                       Manages Citrix NetScaler entities                                                                 
newrelic_deployment             Notify newrelic about app deployments                                                             
nexmo                           Send a SMS via nexmo                                                                              
nmcli                           Manage Networking                                                                                 
npm                             Manage node.js packages with npm                                                                  
ohai                            Returns inventory data from `Ohai'                                                                
open_iscsi                      Manage iscsi targets with open-iscsi                                                              
openbsd_pkg                     Manage packages on OpenBSD.                                                                       
openvswitch_bridge              Manage Open vSwitch bridges                                                                       
openvswitch_db                  Configure open vswitch database.                                                                  
openvswitch_port                Manage Open vSwitch ports                                                                         
opkg                            Package manager for OpenWrt                                                                       
os_auth                         Retrieve an auth token                                                                            
os_client_config                Get OpenStack Client config                                                                       
os_floating_ip                  Add/Remove floating IP from an instance                                                           
os_image                        Add/Delete images from OpenStack Cloud                                                            
os_image_facts                  Retrieve facts about an image within OpenStack.                                                   
os_ironic                       Create/Delete Bare Metal Resources from OpenStack                                                 
os_ironic_node                  Activate/Deactivate Bare Metal Resources from OpenStack                                           
os_keypair                      Add/Delete a keypair from OpenStack                                                               
os_network                      Creates/removes networks from OpenStack                                                           
os_networks_facts               Retrieve facts about one or more OpenStack networks.                                              
os_nova_flavor                  Manage OpenStack compute flavors                                                                  
os_object                       Create or Delete objects and containers from OpenStack                                            
os_port                         Add/Update/Delete ports from an OpenStack cloud.                                                  
os_project                      Manage OpenStack Projects                                                                         
os_router                       Create or delete routers from OpenStack                                                           
os_security_group               Add/Delete security groups from an OpenStack cloud.                                               
os_security_group_rule          Add/Delete rule from an existing security group                                                   
os_server                       Create/Delete Compute Instances from OpenStack                                                    
os_server_actions               Perform actions on Compute Instances from OpenStack                                               
os_server_facts                 Retrieve facts about one or more compute instances                                                
os_server_volume                Attach/Detach Volumes from OpenStack VM's                                                         
os_subnet                       Add/Remove subnet to an OpenStack network                                                         
os_subnets_facts                Retrieve facts about one or more OpenStack subnets.                                               
os_user                         Manage OpenStack Identity Users                                                                   
os_user_group                   Associate OpenStack Identity users and groups                                                     
os_volume                       Create/Delete Cinder Volumes                                                                      
osx_defaults                    osx_defaults allows users to read, write, and delete Mac OS X user defaults from Ansible          
osx_say                         Makes an OSX computer to speak.                                                                   
ovirt                           oVirt/RHEV platform management                                                                    
package                         Generic OS package manager                                                                        
pacman                          Manage packages with `pacman'                                                                     
pagerduty                       Create PagerDuty maintenance windows                                                              
pagerduty_alert                 Trigger, acknowledge or resolve PagerDuty incidents                                               
pam_limits                      Modify Linux PAM limits                                                                           
patch                           Apply patch files using the GNU patch tool.                                                       
pause                           Pause playbook execution                                                                          
pear                            Manage pear/pecl packages                                                                         
ping                            Try to connect to host, verify a usable python and return `pong' on success.                      
pingdom                         Pause/unpause Pingdom alerts                                                                      
pip                             Manages Python library dependencies.                                                              
pkg5                            Manages packages with the Solaris 11 Image Packaging System                                       
pkg5_publisher                  Manages Solaris 11 Image Packaging System publishers                                              
pkgin                           Package manager for SmartOS, NetBSD, et al.                                                       
pkgng                           Package manager for FreeBSD >= 9.0                                                                
pkgutil                         Manage CSW-Packages on Solaris                                                                    
portage                         Package manager for Gentoo                                                                        
portinstall                     Installing packages from FreeBSD's ports system                                                   
postgresql_db                   Add or remove PostgreSQL databases from a remote host.                                            
postgresql_ext                  Add or remove PostgreSQL extensions from a database.                                              
postgresql_lang                 Adds, removes or changes procedural languages with a PostgreSQL database.                         
postgresql_privs                Grant or revoke privileges on PostgreSQL database objects.                                        
postgresql_user                 Adds or removes a users (roles) from a PostgreSQL database.                                       
profitbricks                    Create, destroy, start, stop, and reboot a ProfitBricks virtual machine.                          
profitbricks_datacenter         Create or destroy a ProfitBricks Virtual Datacenter.                                              
profitbricks_nic                Create or Remove a NIC.                                                                           
profitbricks_volume             Create or destroy a volume.                                                                       
profitbricks_volume_attachments Attach or detach a volume.                                                                        
proxmox                         management of instances in Proxmox VE cluster                                                     
proxmox_template                management of OS templates in Proxmox VE cluster                                                  
puppet                          Runs puppet                                                                                       
pushbullet                      Sends notifications to Pushbullet                                                                 
pushover                        Send notifications via u(https://pushover.net)                                                    
rabbitmq_binding                This module manages rabbitMQ bindings                                                             
rabbitmq_exchange               This module manages rabbitMQ exchanges                                                            
rabbitmq_parameter              Adds or removes parameters to RabbitMQ                                                            
rabbitmq_plugin                 Adds or removes plugins to RabbitMQ                                                               
rabbitmq_policy                 Manage the state of policies in RabbitMQ.                                                         
rabbitmq_queue                  This module manages rabbitMQ queues                                                               
rabbitmq_user                   Adds or removes users to RabbitMQ                                                                 
rabbitmq_vhost                  Manage the state of a virtual host in RabbitMQ                                                    
raw                             Executes a low-down and dirty SSH command                                                         
rax                             create / delete an instance in Rackspace Public Cloud                                             
rax_cbs                         Manipulate Rackspace Cloud Block Storage Volumes                                                  
rax_cbs_attachments             Manipulate Rackspace Cloud Block Storage Volume Attachments                                       
rax_cdb                         create/delete or resize a Rackspace Cloud Databases instance                                      
rax_cdb_database                create / delete a database in the Cloud Databases                                                 
rax_cdb_user                    create / delete a Rackspace Cloud Database                                                        
rax_clb                         create / delete a load balancer in Rackspace Public Cloud                                         
rax_clb_nodes                   add, modify and remove nodes from a Rackspace Cloud Load Balancer                                 
rax_clb_ssl                     Manage SSL termination for a Rackspace Cloud Load Balancer.                                       
rax_dns                         Manage domains on Rackspace Cloud DNS                                                             
rax_dns_record                  Manage DNS records on Rackspace Cloud DNS                                                         
rax_facts                       Gather facts for Rackspace Cloud Servers                                                          
rax_files                       Manipulate Rackspace Cloud Files Containers                                                       
rax_files_objects               Upload, download, and delete objects in Rackspace Cloud Files                                     
rax_identity                    Load Rackspace Cloud Identity                                                                     
rax_keypair                     Create a keypair for use with Rackspace Cloud Servers                                             
rax_meta                        Manipulate metadata for Rackspace Cloud Servers                                                   
rax_mon_alarm                   Create or delete a Rackspace Cloud Monitoring alarm.                                              
rax_mon_check                   Create or delete a Rackspace Cloud Monitoring check for an existing entity.                       
rax_mon_entity                  Create or delete a Rackspace Cloud Monitoring entity                                              
rax_mon_notification            Create or delete a Rackspace Cloud Monitoring notification.                                       
rax_mon_notification_plan       Create or delete a Rackspace Cloud Monitoring notification plan.                                  
rax_network                     create / delete an isolated network in Rackspace Public Cloud                                     
rax_queue                       create / delete a queue in Rackspace Public Cloud                                                 
rax_scaling_group               Manipulate Rackspace Cloud Autoscale Groups                                                       
rax_scaling_policy              Manipulate Rackspace Cloud Autoscale Scaling Policy                                               
rds                             create, delete, or modify an Amazon rds instance                                                  
rds_param_group                 manage RDS parameter groups                                                                       
rds_subnet_group                manage RDS database subnet groups                                                                 
redhat_subscription             Manage Red Hat Network registration and subscriptions using the `subscription-manager' command    
redis                           Various redis commands, slave and flush                                                           
replace                         Replace all instances of a particular string in a file using a back-referenced regular expression.
rhn_channel                     Adds or removes Red Hat software channels                                                         
rhn_register                    Manage Red Hat Network registration using the `rhnreg_ks' command                                 
riak                            This module handles some common Riak operations                                                   
rollbar_deployment              Notify Rollbar about app deployments                                                              
route53                         add or delete entries in Amazons Route53 DNS service                                              
route53_facts                   Retrieves route53 details using AWS methods                                                       
route53_health_check            add or delete health-checks in Amazons Route53 DNS service                                        
route53_zone                    add or delete Route53 zones                                                                       
rpm_key                         Adds or removes a gpg key from the rpm db                                                         
s3                              manage objects in S3.                                                                             
s3_bucket                       Manage s3 buckets in AWS                                                                          
s3_lifecycle                    Manage s3 bucket lifecycle rules in AWS                                                           
s3_logging                      Manage logging facility of an s3 bucket in AWS                                                    
script                          Runs a local script on a remote node after transferring it                                        
seboolean                       Toggles SELinux booleans.                                                                         
selinux                         Change policy and state of SELinux                                                                
selinux_permissive              Change permissive domain in SELinux policy                                                        
sendgrid                        Sends an email with the SendGrid API                                                              
sensu_check                     Manage Sensu checks                                                                               
seport                          Manages SELinux network port type definitions                                                     
service                         Manage services.                                                                                  
set_fact                        Set host facts from a task                                                                        
setup                           Gathers facts about remote hosts                                                                  
shell                           Execute commands in nodes.                                                                        
slack                           Send Slack notifications                                                                          
slackpkg                        Package manager for Slackware >= 12.2                                                             
slurp                           Slurps a file from remote nodes                                                                   
snmp_facts                      Retrive facts for a device using SNMP.                                                            
sns                             Send Amazon Simple Notification Service (SNS) messages                                            
sns_topic                       Manages AWS SNS topics and subscriptions                                                          
solaris_zone                    Manage Solaris zones                                                                              
sqs_queue                       Creates or deletes AWS SQS queues.                                                                
stackdriver                     Send code deploy and annotation events to stackdriver                                             
stat                            retrieve file or file system status                                                               
sts_assume_role                 Assume a role using AWS Security Token Service and obtain temporary credentials                   
subversion                      Deploys a subversion repository.                                                                  
supervisorctl                   Manage the state of a program or group of programs running via supervisord                        
svc                             Manage daemontools services.                                                                      
svr4pkg                         Manage Solaris SVR4 packages                                                                      
swdepot                         Manage packages with swdepot package manager (HP-UX)                                              
synchronize                     Uses rsync to make synchronizing file paths in your playbooks quick and easy.                     
sysctl                          Manage entries in sysctl.conf.                                                                    
taiga_issue                     Creates/deletes an issue in a Taiga Project Management Platform                                   
template                        Templates a file out to a remote server.                                                          
twilio                          Sends a text message to a mobile phone through Twilio.                                            
typetalk                        Send a message to typetalk                                                                        
ufw                             Manage firewall with UFW                                                                          
unarchive                       Unpacks an archive after (optionally) copying it from the local machine.                          
uptimerobot                     Pause and start Uptime Robot monitoring                                                           
uri                             Interacts with webservices                                                                        
urpmi                           Urpmi manager                                                                                     
user                            Manage user accounts                                                                              
vca_fw                          add remove firewall rules in a gateway  in a vca                                                  
vca_nat                         add remove nat rules in a gateway  in a vca                                                       
vca_vapp                        Manages vCloud Air vApp instances.                                                                
vertica_configuration           Updates Vertica configuration parameters.                                                         
vertica_facts                   Gathers Vertica database facts.                                                                   
vertica_role                    Adds or removes Vertica database roles and assigns roles to them.                                 
vertica_schema                  Adds or removes Vertica database schema and roles.                                                
vertica_user                    Adds or removes Vertica database users and assigns roles.                                         
virt                            Manages virtual machines supported by libvirt                                                     
virt_net                        Manage libvirt network configuration                                                              
virt_pool                       Manage libvirt storage pools                                                                      
vmware_cluster                  Create VMware vSphere Cluster                                                                     
vmware_datacenter               Manage VMware vSphere Datacenters                                                                 
vmware_dns_config               Manage VMware ESXi DNS Configuration                                                              
vmware_dvs_host                 Add or remove a host from distributed virtual switch                                              
vmware_dvs_portgroup            Create or remove a Distributed vSwitch portgroup                                                  
vmware_dvswitch                 Create or remove a distributed vSwitch                                                            
vmware_host                     Add/remove ESXi host to/from vCenter                                                              
vmware_migrate_vmk              Migrate a VMK interface from VSS to VDS                                                           
vmware_portgroup                Create a VMware portgroup                                                                         
vmware_target_canonical_facts   Return canonical (NAA) from an ESXi host                                                          
vmware_vm_facts                 Return basic facts pertaining to a vSphere virtual machine guest                                  
vmware_vm_vss_dvs_migrate       Migrates a virtual machine from a standard vswitch to distributed                                 
vmware_vmkernel                 Create a VMware VMkernel Interface                                                                
vmware_vmkernel_ip_config       Configure the VMkernel IP Address                                                                 
vmware_vsan_cluster             Configure VSAN clustering on an ESXi host                                                         
vmware_vswitch                  Add a VMware Standard Switch to an ESXi host                                                      
vsphere_copy                    Copy a file to a vCenter datastore                                                                
vsphere_guest                   Create/delete/manage a guest VM through VMware vSphere.                                           
wait_for                        Waits for a condition before continuing.                                                          
webfaction_app                  Add or remove applications on a Webfaction host                                                   
webfaction_db                   Add or remove a database on Webfaction                                                            
webfaction_domain               Add or remove domains and subdomains on Webfaction                                                
webfaction_mailbox              Add or remove mailboxes on Webfaction                                                             
webfaction_site                 Add or remove a website on a Webfaction host                                                      
win_acl                         Set file/directory permissions for a system user or group.                                        
win_chocolatey                  Installs packages using chocolatey                                                                
win_copy                        Copies files to remote locations on windows hosts.                                                
win_dotnet_ngen                 Runs ngen to recompile DLLs after .NET  updates                                                   
win_environment                 Modifies environment variables on windows hosts.                                                  
win_feature                     Installs and uninstalls Windows Features                                                          
win_file                        Creates, touches or removes files or directories.                                                 
win_firewall_rule               Windows firewall automation                                                                       
win_get_url                     Fetches a file from a given URL                                                                   
win_group                       Add and remove local groups                                                                       
win_iis_virtualdirectory        Configures a virtual directory in IIS.                                                            
win_iis_webapplication          Configures a IIS Web application.                                                                 
win_iis_webapppool              Configures a IIS Web Application Pool.                                                            
win_iis_webbinding              Configures a IIS Web site.                                                                        
win_iis_website                 Configures a IIS Web site.                                                                        
win_lineinfile                  Ensure a particular line is in a file, or replace an existing line using a back-referenced regular...
win_msi                         Installs and uninstalls Windows MSI files                                                         
win_nssm                        NSSM - the Non-Sucking Service Manager                                                            
win_package                     Installs/Uninstalls a installable package, either from local file system or url                   
win_ping                        A windows version of the classic ping module.                                                     
win_regedit                     Add, Edit, or Remove Registry Keys and Values                                                     
win_scheduled_task              Manage scheduled tasks                                                                            
win_service                     Manages Windows services                                                                          
win_stat                        returns information about a Windows file                                                          
win_template                    Templates a file out to a remote server.                                                          
win_unzip                       Unzips compressed files and archives on the Windows node                                          
win_updates                     Download and install Windows updates                                                              
win_user                        Manages local Windows user accounts                                                               
win_webpicmd                    Installs packages using Web Platform Installer command-line                                       
xattr                           set/retrieve extended attributes                                                                  
xenserver_facts                 get facts reported on xenserver                                                                   
yum                             Manages packages with the `yum' package manager                                                   
zabbix_group                    Zabbix host groups creates/deletes                                                                
zabbix_host                     Zabbix host creates/updates/deletes                                                               
zabbix_hostmacro                Zabbix host macro creates/updates/deletes                                                         
zabbix_maintenance              Create Zabbix maintenance windows                                                                 
zabbix_screen                   Zabbix screen creates/updates/deletes                                                             
zfs                             Manage zfs                                                                                        
znode                           Create, delete, retrieve, and update znodes using ZooKeeper.                                      
zypper                          Manage packages on SUSE and openSUSE                                                              
zypper_repository               Add and remove Zypper repositories                                                                

DEPRECATED:
ec2_ami_search                  Retrieve AWS AMI information for a given operating system.                                        
fireball                        Enable fireball mode on remote node                                                               
glance_image                    Add/Delete images from glance                                                                     
keystone_user                   Manage OpenStack Identity (keystone) users, tenants and roles                                     
nova_compute                    Create/Delete VMs from OpenStack                                                                  
nova_keypair                    Add/Delete key pair from nova                                                                     
quantum_floating_ip             Add/Remove floating IP from an instance                                                           
quantum_floating_ip_associate   Associate or disassociate a particular floating IP with an instance                               
quantum_network                 Creates/Removes networks from OpenStack                                                           
quantum_router                  Create or Remove router from openstack                                                            
quantum_router_gateway          set/unset a gateway interface for the router with the specified external network                  
quantum_router_interface        Attach/Dettach a subnet's interface to a router                                                   
quantum_subnet                  Add/remove subnet from a network                                                                  
2017-04-01 18:12:15,449 p=7317 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 18:12:15,585 p=7317 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 18:12:18,438 p=7317 u=root |  ok: [localhost]
2017-04-01 18:12:18,451 p=7317 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 18:12:20,239 p=7317 u=root |  ok: [localhost]
2017-04-01 18:12:20,252 p=7317 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 18:12:22,420 p=7317 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:12:22,433 p=7317 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 18:12:24,307 p=7317 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:12:24,322 p=7317 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 18:12:56,525 p=7317 u=root |  ok: [localhost]
2017-04-01 18:12:56,535 p=7317 u=root |  PLAY RECAP *********************************************************************
2017-04-01 18:12:56,536 p=7317 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-04-01 18:19:06,264 p=8348 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 18:19:06,415 p=8348 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 18:19:09,149 p=8348 u=root |  ok: [localhost]
2017-04-01 18:19:09,168 p=8348 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 18:19:10,860 p=8348 u=root |  ok: [localhost]
2017-04-01 18:19:10,874 p=8348 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 18:19:12,936 p=8348 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:19:12,952 p=8348 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 18:19:14,863 p=8348 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:19:14,894 p=8348 u=root |  TASK [zabbix : command to extend password aging of zabbix user] ****************
2017-04-01 18:19:15,714 p=8348 u=root |  ok: [localhost]
2017-04-01 18:19:15,730 p=8348 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 18:19:48,007 p=8348 u=root |  ok: [localhost]
2017-04-01 18:19:48,016 p=8348 u=root |  PLAY RECAP *********************************************************************
2017-04-01 18:19:48,017 p=8348 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-04-01 18:48:08,189 p=1742 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 18:48:09,462 p=1742 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 18:48:18,129 p=1742 u=root |  ok: [localhost]
2017-04-01 18:48:18,153 p=1742 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 18:48:20,625 p=1742 u=root |  ok: [localhost]
2017-04-01 18:48:20,639 p=1742 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 18:48:23,038 p=1742 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:48:23,053 p=1742 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 18:48:25,320 p=1742 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:48:25,372 p=1742 u=root |  TASK [zabbix : command to extend password aging of zabbix user] ****************
2017-04-01 18:48:26,634 p=1742 u=root |  ok: [localhost]
2017-04-01 18:48:26,681 p=1742 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 18:49:02,261 p=1742 u=root |  ok: [localhost]
2017-04-01 18:49:02,276 p=1742 u=root |  TASK [zabbix : copy executables to /usr/local/sbin/ folder] ********************
2017-04-01 18:49:02,437 p=1742 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "could not find src=/root/step0/files/executables/zabbix*"}
2017-04-01 18:49:02,440 p=1742 u=root |  NO MORE HOSTS LEFT *************************************************************
2017-04-01 18:49:02,443 p=1742 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 18:49:02,443 p=1742 u=root |  PLAY RECAP *********************************************************************
2017-04-01 18:49:02,444 p=1742 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-04-01 18:51:21,086 p=2764 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 18:51:21,231 p=2764 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 18:51:24,173 p=2764 u=root |  ok: [localhost]
2017-04-01 18:51:24,186 p=2764 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 18:51:25,983 p=2764 u=root |  ok: [localhost]
2017-04-01 18:51:25,995 p=2764 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 18:51:28,184 p=2764 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:51:28,197 p=2764 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 18:51:30,296 p=2764 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 18:51:30,311 p=2764 u=root |  TASK [zabbix : command to extend password aging of zabbix user] ****************
2017-04-01 18:51:31,101 p=2764 u=root |  ok: [localhost]
2017-04-01 18:51:31,116 p=2764 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 18:52:04,826 p=2764 u=root |  ok: [localhost]
2017-04-01 18:52:04,843 p=2764 u=root |  TASK [zabbix : copy executables to /usr/local/sbin/ folder] ********************
2017-04-01 18:52:08,048 p=2764 u=root |  changed: [localhost] => (item=zabbix_sender)
2017-04-01 18:52:08,065 p=2764 u=root |  PLAY RECAP *********************************************************************
2017-04-01 18:52:08,068 p=2764 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-04-01 19:19:47,585 p=3911 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 19:19:47,726 p=3911 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 19:19:50,547 p=3911 u=root |  ok: [localhost]
2017-04-01 19:19:50,559 p=3911 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 19:19:52,312 p=3911 u=root |  ok: [localhost]
2017-04-01 19:19:52,330 p=3911 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 19:19:54,460 p=3911 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:19:54,475 p=3911 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 19:19:56,375 p=3911 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:19:56,390 p=3911 u=root |  TASK [zabbix : command to extend password aging of zabbix user] ****************
2017-04-01 19:19:57,146 p=3911 u=root |  ok: [localhost]
2017-04-01 19:19:57,160 p=3911 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 19:20:30,150 p=3911 u=root |  ok: [localhost]
2017-04-01 19:20:30,163 p=3911 u=root |  TASK [zabbix : copy executables to /usr/local/sbin/ folder] ********************
2017-04-01 19:20:41,681 p=3911 u=root |  ok: [localhost] => (item=zabbix_sender)
2017-04-01 19:20:41,703 p=3911 u=root |  changed: [localhost] => (item=zabbix_agent)
2017-04-01 19:20:41,733 p=3911 u=root |  changed: [localhost] => (item=zabbix_agentd)
2017-04-01 19:20:41,766 p=3911 u=root |  changed: [localhost] => (item=zabbix_get)
2017-04-01 19:20:41,784 p=3911 u=root |  PLAY RECAP *********************************************************************
2017-04-01 19:20:41,786 p=3911 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-04-01 19:40:49,675 p=5238 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/step0/roles/zabbix/tasks/main.yml': line 54, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    src: files/executables/{{ item.file }}
    dest: {{ item.dest }}
           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-04-01 19:41:32,330 p=5244 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/step0/roles/zabbix/tasks/main.yml': line 54, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    src: files/executables/{{ item.file }}
    dest: {{ item.dest }}
           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-04-01 19:42:35,507 p=5250 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 19:42:35,856 p=5250 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 19:42:39,498 p=5250 u=root |  ok: [localhost]
2017-04-01 19:42:39,517 p=5250 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 19:42:41,607 p=5250 u=root |  ok: [localhost]
2017-04-01 19:42:41,627 p=5250 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 19:42:44,122 p=5250 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:42:44,145 p=5250 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 19:42:46,580 p=5250 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:42:46,602 p=5250 u=root |  TASK [zabbix : command to extend password aging of zabbix user] ****************
2017-04-01 19:42:47,437 p=5250 u=root |  ok: [localhost]
2017-04-01 19:42:47,478 p=5250 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 19:43:26,274 p=5250 u=root |  ok: [localhost]
2017-04-01 19:43:26,288 p=5250 u=root |  TASK [zabbix : copy executables to respective folder] **************************
2017-04-01 19:43:27,067 p=5250 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/sbin/', u'file': u'zabbix_sender'}) => {"failed": true, "item": {"dest": "/usr/local/sbin/", "file": "zabbix_sender"}, "msg": "could not find src=/root/step0/files/executables/\"zabbix_sender\""}
2017-04-01 19:43:27,091 p=5250 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/sbin/', u'file': u'zabbix_agent'}) => {"failed": true, "item": {"dest": "/usr/local/sbin/", "file": "zabbix_agent"}, "msg": "could not find src=/root/step0/files/executables/\"zabbix_agent\""}
2017-04-01 19:43:27,135 p=5250 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/sbin/', u'file': u'zabbix_agentd'}) => {"failed": true, "item": {"dest": "/usr/local/sbin/", "file": "zabbix_agentd"}, "msg": "could not find src=/root/step0/files/executables/\"zabbix_agentd\""}
2017-04-01 19:43:27,161 p=5250 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/sbin/', u'file': u'zabbix_get'}) => {"failed": true, "item": {"dest": "/usr/local/sbin/", "file": "zabbix_get"}, "msg": "could not find src=/root/step0/files/executables/\"zabbix_get\""}
2017-04-01 19:43:27,186 p=5250 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/bin/zabagentstart', u'file': u'zabagstrt'}) => {"failed": true, "item": {"dest": "/usr/local/bin/zabagentstart", "file": "zabagstrt"}, "msg": "could not find src=/root/step0/files/executables/\"zabagstrt\""}
2017-04-01 19:43:27,201 p=5250 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/bin/zabagentstop', u'file': u'zabagstop'}) => {"failed": true, "item": {"dest": "/usr/local/bin/zabagentstop", "file": "zabagstop"}, "msg": "could not find src=/root/step0/files/executables/\"zabagstop\""}
2017-04-01 19:43:27,208 p=5250 u=root |  NO MORE HOSTS LEFT *************************************************************
2017-04-01 19:43:27,213 p=5250 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 19:43:27,215 p=5250 u=root |  PLAY RECAP *********************************************************************
2017-04-01 19:43:27,216 p=5250 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-04-01 19:45:16,762 p=6272 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 19:45:16,978 p=6272 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 19:45:20,151 p=6272 u=root |  ok: [localhost]
2017-04-01 19:45:20,169 p=6272 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 19:45:22,236 p=6272 u=root |  ok: [localhost]
2017-04-01 19:45:22,257 p=6272 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 19:45:24,780 p=6272 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:45:24,799 p=6272 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 19:45:26,914 p=6272 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:45:26,933 p=6272 u=root |  TASK [zabbix : command to extend password aging of zabbix user] ****************
2017-04-01 19:45:27,851 p=6272 u=root |  ok: [localhost]
2017-04-01 19:45:27,880 p=6272 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 19:46:06,352 p=6272 u=root |  ok: [localhost]
2017-04-01 19:46:06,372 p=6272 u=root |  TASK [zabbix : copy executables to respective folder] **************************
2017-04-01 19:46:07,397 p=6272 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/sbin/', u'file': u'zabbix_sender'}) => {"failed": true, "item": {"dest": "/usr/local/sbin/", "file": "zabbix_sender"}, "msg": "could not find src=/root/step0/files/executables/\"zabbix_sender\""}
2017-04-01 19:46:07,428 p=6272 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/sbin/', u'file': u'zabbix_agent'}) => {"failed": true, "item": {"dest": "/usr/local/sbin/", "file": "zabbix_agent"}, "msg": "could not find src=/root/step0/files/executables/\"zabbix_agent\""}
2017-04-01 19:46:07,460 p=6272 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/sbin/', u'file': u'zabbix_agentd'}) => {"failed": true, "item": {"dest": "/usr/local/sbin/", "file": "zabbix_agentd"}, "msg": "could not find src=/root/step0/files/executables/\"zabbix_agentd\""}
2017-04-01 19:46:07,495 p=6272 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/sbin/', u'file': u'zabbix_get'}) => {"failed": true, "item": {"dest": "/usr/local/sbin/", "file": "zabbix_get"}, "msg": "could not find src=/root/step0/files/executables/\"zabbix_get\""}
2017-04-01 19:46:07,517 p=6272 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/bin/zabagentstart', u'file': u'zabagstrt'}) => {"failed": true, "item": {"dest": "/usr/local/bin/zabagentstart", "file": "zabagstrt"}, "msg": "could not find src=/root/step0/files/executables/\"zabagstrt\""}
2017-04-01 19:46:07,545 p=6272 u=root |  failed: [localhost] => (item={u'dest': u'/usr/local/bin/zabagentstop', u'file': u'zabagstop'}) => {"failed": true, "item": {"dest": "/usr/local/bin/zabagentstop", "file": "zabagstop"}, "msg": "could not find src=/root/step0/files/executables/\"zabagstop\""}
2017-04-01 19:46:07,549 p=6272 u=root |  NO MORE HOSTS LEFT *************************************************************
2017-04-01 19:46:07,556 p=6272 u=root |  	to retry, use: --limit @example1.retry

2017-04-01 19:46:07,559 p=6272 u=root |  PLAY RECAP *********************************************************************
2017-04-01 19:46:07,561 p=6272 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-04-01 19:50:29,830 p=7282 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 19:50:30,008 p=7282 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 19:50:33,217 p=7282 u=root |  ok: [localhost]
2017-04-01 19:50:33,248 p=7282 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 19:50:35,911 p=7282 u=root |  ok: [localhost]
2017-04-01 19:50:35,953 p=7282 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 19:50:38,026 p=7282 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:50:38,043 p=7282 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 19:50:39,432 p=7282 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:50:39,448 p=7282 u=root |  TASK [zabbix : command to extend password aging of zabbix user] ****************
2017-04-01 19:50:40,015 p=7282 u=root |  ok: [localhost]
2017-04-01 19:50:40,034 p=7282 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 19:51:18,330 p=7282 u=root |  ok: [localhost]
2017-04-01 19:51:18,348 p=7282 u=root |  TASK [zabbix : copy executables to /usr/local/sbin/ folder] ********************
2017-04-01 19:51:37,178 p=7282 u=root |  ok: [localhost] => (item={u'dest': u'/usr/local/sbin/zabbix_sender', u'file': u'zabbix_sender'})
2017-04-01 19:51:37,194 p=7282 u=root |  ok: [localhost] => (item={u'dest': u'/usr/local/sbin/zabbix_agent', u'file': u'zabbix_agent'})
2017-04-01 19:51:37,216 p=7282 u=root |  ok: [localhost] => (item={u'dest': u'/usr/local/sbin/zabbix_agentd', u'file': u'zabbix_agentd'})
2017-04-01 19:51:37,235 p=7282 u=root |  ok: [localhost] => (item={u'dest': u'/usr/local/sbin/zabbix_get', u'file': u'zabbix_get'})
2017-04-01 19:51:37,261 p=7282 u=root |  changed: [localhost] => (item={u'dest': u'/usr/local/bin/zabagentstart', u'file': u'zabagstrt'})
2017-04-01 19:51:37,283 p=7282 u=root |  changed: [localhost] => (item={u'dest': u'/usr/local/bin/zabagentstop', u'file': u'zabagstop'})
2017-04-01 19:51:37,293 p=7282 u=root |  PLAY RECAP *********************************************************************
2017-04-01 19:51:37,294 p=7282 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-04-01 19:59:25,686 p=8662 u=root |  PLAY [zabbix installation  playbook] *******************************************
2017-04-01 19:59:25,823 p=8662 u=root |  TASK [zabbix : install sysstat rpm] ********************************************
2017-04-01 19:59:28,731 p=8662 u=root |  ok: [localhost]
2017-04-01 19:59:28,766 p=8662 u=root |  TASK [zabbix : start dependent service] ****************************************
2017-04-01 19:59:30,638 p=8662 u=root |  ok: [localhost]
2017-04-01 19:59:30,657 p=8662 u=root |  TASK [zabbix : users | managing user accounts] *********************************
2017-04-01 19:59:32,844 p=8662 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:59:32,863 p=8662 u=root |  TASK [zabbix : users | adding users to sudoers] ********************************
2017-04-01 19:59:35,119 p=8662 u=root |  changed: [localhost] => (item={u'comment': u'zabbix service account', u'state': u'present', u'sudo': True, u'user': u'zabbix', u'pass': u'z@bb1xhijkill'})
2017-04-01 19:59:35,146 p=8662 u=root |  TASK [zabbix : command to extend password aging of zabbix user] ****************
2017-04-01 19:59:36,216 p=8662 u=root |  ok: [localhost]
2017-04-01 19:59:36,245 p=8662 u=root |  TASK [zabbix : copy scripts to /etc/zabbix folder] *****************************
2017-04-01 20:00:08,720 p=8662 u=root |  changed: [localhost]
2017-04-01 20:00:08,727 p=8662 u=root |  TASK [zabbix : copy executables to /usr/local/sbin/ folder] ********************
2017-04-01 20:00:14,780 p=8662 u=root |  changed: [localhost] => (item={u'dest': u'/usr/local/sbin/zabbix_sender', u'file': u'zabbix_sender'})
2017-04-01 20:00:14,785 p=8662 u=root |  changed: [localhost] => (item={u'dest': u'/usr/local/sbin/zabbix_agent', u'file': u'zabbix_agent'})
2017-04-01 20:00:14,790 p=8662 u=root |  changed: [localhost] => (item={u'dest': u'/usr/local/sbin/zabbix_agentd', u'file': u'zabbix_agentd'})
2017-04-01 20:00:14,796 p=8662 u=root |  changed: [localhost] => (item={u'dest': u'/usr/local/sbin/zabbix_get', u'file': u'zabbix_get'})
2017-04-01 20:00:14,804 p=8662 u=root |  changed: [localhost] => (item={u'dest': u'/usr/local/bin/zabagentstart', u'file': u'zabagstrt'})
2017-04-01 20:00:14,811 p=8662 u=root |  changed: [localhost] => (item={u'dest': u'/usr/local/bin/zabagentstop', u'file': u'zabagstop'})
2017-04-01 20:00:14,817 p=8662 u=root |  PLAY RECAP *********************************************************************
2017-04-01 20:00:14,817 p=8662 u=root |  localhost                  : ok=7    changed=4    unreachable=0    failed=0   
